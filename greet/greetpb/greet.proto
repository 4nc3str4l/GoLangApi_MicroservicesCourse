syntax = "proto3";

package greet;
option go_package="greetpb";

message Greeting{
    string first_name = 1;
    string last_name = 2;
}

// Unary Streaming Messages
message GreetRequest {
    Greeting greeting = 1;
}

message GreetResponse {
    string result = 1;
}

// Client Streaming Messages
message GreetManyTimesRequest {
    Greeting greeting = 1;
}

message GreetManytimesResponse {
    string result = 1;
}


// Server Streaming Messages
message LongGreetRequest{
    Greeting greeting = 1;
}

message LongGreetResponse{
    string result = 1;
}

// Bidirectional Streaming Messages
message GreetEveryoneRequest{
    Greeting greeting = 1;
}

message GreetEveryoneResponse{
    string result = 1;
}

// Unary RPC with deadline messages
message GreetWithDeadlineRequest{
    Greeting greeting = 1;
}

message GreetWithDeadlineResponse{
    string result = 1;
}


service GreetService{
    
    // Unary
    rpc Greet(GreetRequest) returns (GreetResponse) {};

    // Server Streaming
    rpc GreetManyTimes(GreetManyTimesRequest ) returns (stream GreetManytimesResponse) {};

    // Client Streaming
    rpc LongGreet(stream LongGreetRequest) returns (LongGreetResponse) {};

    // BiDirectional Streaming
    rpc GreetEveryone(stream GreetEveryoneRequest) returns (stream GreetEveryoneResponse) {};

    // Unary with deadline
    rpc GreetWithDeadline(GreetWithDeadlineRequest) returns (GreetWithDeadlineResponse) {};
}


